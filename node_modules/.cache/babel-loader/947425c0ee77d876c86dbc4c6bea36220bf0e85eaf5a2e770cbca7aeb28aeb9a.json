{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\topnet-client\\\\src\\\\components\\\\EmployeeContext.jsx\",\n  _s = $RefreshSig$();\n// src/context/EmployeeContext.js\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EmployeeContext = /*#__PURE__*/createContext();\nexport const EmployeeProvider = ({\n  children\n}) => {\n  _s();\n  const [employeeCount, setEmployeeCount] = useState(null); // null par défaut\n\n  // Fonction pour fixer une seule fois la valeur de employeeCount\n  const setFixedEmployeeCount = count => {\n    if (employeeCount === null) {\n      setEmployeeCount(count);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(EmployeeContext.Provider, {\n    value: {\n      employeeCount,\n      setFixedEmployeeCount\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeProvider, \"V8E81rq7NMEMEbprEH0iAHuO0vI=\");\n_c = EmployeeProvider;\nvar _c;\n$RefreshReg$(_c, \"EmployeeProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","EmployeeContext","EmployeeProvider","children","_s","employeeCount","setEmployeeCount","setFixedEmployeeCount","count","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hp/topnet-client/src/components/EmployeeContext.jsx"],"sourcesContent":["// src/context/EmployeeContext.js\r\nimport React, { createContext, useState } from 'react';\r\n\r\nexport const EmployeeContext = createContext();\r\n\r\nexport const EmployeeProvider = ({ children }) => {\r\n  const [employeeCount, setEmployeeCount] = useState(null);  // null par défaut\r\n\r\n  // Fonction pour fixer une seule fois la valeur de employeeCount\r\n  const setFixedEmployeeCount = (count) => {\r\n    if (employeeCount === null) {\r\n      setEmployeeCount(count);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <EmployeeContext.Provider value={{ employeeCount, setFixedEmployeeCount }}>\r\n      {children}\r\n    </EmployeeContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,eAAe,gBAAGJ,aAAa,CAAC,CAAC;AAE9C,OAAO,MAAMK,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;;EAE3D;EACA,MAAMS,qBAAqB,GAAIC,KAAK,IAAK;IACvC,IAAIH,aAAa,KAAK,IAAI,EAAE;MAC1BC,gBAAgB,CAACE,KAAK,CAAC;IACzB;EACF,CAAC;EAED,oBACER,OAAA,CAACC,eAAe,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEL,aAAa;MAAEE;IAAsB,CAAE;IAAAJ,QAAA,EACvEA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACV,EAAA,CAfWF,gBAAgB;AAAAa,EAAA,GAAhBb,gBAAgB;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}