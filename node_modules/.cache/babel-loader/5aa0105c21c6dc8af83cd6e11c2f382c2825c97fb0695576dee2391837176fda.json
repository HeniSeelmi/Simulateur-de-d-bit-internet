{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\topnet-client\\\\src\\\\components\\\\Entreprise\\\\Ife4.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../styles.css'; // Assurez-vous d'importer les styles\nimport NavBar from '../NavBar';\nimport { EmployeeContext } from '../EmployeeContext'; // Importe le contexte\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ife4 = ({\n  previousLocalEmployeeCount\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    employeeCount\n  } = useContext(EmployeeContext); // Récupère la valeur globale de employeeCount\n\n  // Calcul de la valeur initiale de localEmployeeCount\n  const initialLocalCount = employeeCount > previousLocalEmployeeCount ? employeeCount - previousLocalEmployeeCount : 0;\n\n  // Limite maximale pour le compteur local\n  const maxCount = employeeCount > previousLocalEmployeeCount ? employeeCount - previousLocalEmployeeCount : employeeCount;\n  const [localEmployeeCount, setLocalEmployeeCount] = useState(initialLocalCount);\n  const [qualityCounts, setQualityCounts] = useState({\n    \"Petit groupe (3-5)\": 0,\n    \"Grand groupe (7+)\": 0,\n    \"Basse définition\": 0,\n    \"Définition standard\": 0,\n    \"HD (1080p)\": 0,\n    \"Je ne sais pas\": 0\n  });\n  const [displayCounters, setDisplayCounters] = useState({});\n\n  // Mise à jour de localEmployeeCount si employeeCount et previousLocalEmployeeCount sont égaux\n  useEffect(() => {\n    if (employeeCount === previousLocalEmployeeCount) {\n      setLocalEmployeeCount(0); // Réinitialise à 0 pour une mise à jour manuelle\n    }\n  }, [employeeCount, previousLocalEmployeeCount]);\n  const goToInterface5 = () => {\n    const totalSelectedDevices = Object.values(qualityCounts).reduce((sum, count) => sum + count, 0);\n    if (totalSelectedDevices === localEmployeeCount) {\n      navigate('/Entreprise/Ife5'); // Navigue vers Interface 5 seulement si la condition est remplie\n    } else {\n      alert('Le nombre total de participants doit correspondre au nombre d’employés.');\n    }\n  };\n  const handleBackClick = () => {\n    navigate('/Entreprise/Ifee3'); // Retourne à l'interface précédente\n  };\n  const incrementCount = () => {\n    if (localEmployeeCount < maxCount) {\n      setLocalEmployeeCount(localEmployeeCount + 1);\n    } else {\n      // Demande une nouvelle valeur à l'utilisateur\n      const newValue = parseInt(prompt(`Le nombre a atteint la limite de ${employeeCount}. Entrez une nouvelle valeur (max: ${employeeCount}) :`), 10);\n\n      // Vérifie si la nouvelle valeur est valide\n      if (!isNaN(newValue) && newValue >= 0 && newValue <= employeeCount) {\n        setLocalEmployeeCount(newValue); // Réinitialise à la nouvelle valeur\n      } else {\n        alert(`Veuillez entrer un nombre valide entre 0 et ${employeeCount}.`);\n      }\n    }\n  };\n  const decrementCount = () => {\n    if (localEmployeeCount > 0) {\n      setLocalEmployeeCount(localEmployeeCount - 1);\n    }\n  };\n  const handleQualityIncrement = quality => {\n    const totalSelectedDevices = Object.values(qualityCounts).reduce((sum, count) => sum + count, 0);\n    if (totalSelectedDevices < localEmployeeCount) {\n      setQualityCounts(prevCounts => ({\n        ...prevCounts,\n        [quality]: prevCounts[quality] + 1\n      }));\n    } else {\n      alert('Le nombre total d’appareils a atteint la limite.');\n    }\n  };\n  const handleQualityDecrement = quality => {\n    if (qualityCounts[quality] > 0) {\n      setQualityCounts(prevCounts => ({\n        ...prevCounts,\n        [quality]: prevCounts[quality] - 1\n      }));\n    }\n  };\n  const handleQualityClick = quality => {\n    setDisplayCounters(prevState => ({\n      ...prevState,\n      [quality]: true\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-tooltip-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"go-back-text\",\n        onClick: handleBackClick,\n        children: \"\\u276E Retour\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"survey-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Combien d'employ\\xE9s seraient en appels vid\\xE9o ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"survey-description\",\n        children: \"Vid\\xE9oconf\\xE9rence, Skype, etc.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"survey-description\",\n        children: [\"Sur \", localEmployeeCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employee-counter\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"counter-btn\",\n          onClick: decrementCount,\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"employee-count\",\n          children: localEmployeeCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"counter-btn\",\n          onClick: incrementCount,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-btn\",\n        onClick: goToInterface5,\n        children: \"Suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-quality-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quality-description\",\n        children: \"Facultatif: S\\xE9lectionnez la qualit\\xE9 vid\\xE9o et le nombre de personnes sur les appels vid\\xE9o ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quality-options\",\n        children: Object.keys(qualityCounts).map(quality => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quality-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"quality-btn\",\n            onClick: () => handleQualityClick(quality),\n            children: quality\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this), displayCounters[quality] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quality-counter\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"counter-butn\",\n              onClick: () => handleQualityDecrement(quality),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"quality-count\",\n              children: [qualityCounts[quality], \" devices\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"counter-butn\",\n              onClick: () => handleQualityIncrement(quality),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 33\n          }, this)]\n        }, quality, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n_s(Ife4, \"F4E2rYI7XjScgxt9lhEICtAA8og=\", false, function () {\n  return [useNavigate];\n});\n_c = Ife4;\nfunction InfoTooltip() {\n  _s2();\n  const [isVisible, setIsVisible] = useState(false);\n  const toggleTooltip = () => {\n    setIsVisible(!isVisible);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tooltip-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip-icon\",\n      onClick: toggleTooltip,\n      children: \"?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), isVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip-box\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Les appels vid\\xE9o ne n\\xE9cessitent pas de vitesses \\xE9lev\\xE9es, mais vous aurez besoin de plus de bande passante pour des appels vid\\xE9o HD ou des conf\\xE9rences avec de grands groupes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 9\n  }, this);\n}\n_s2(InfoTooltip, \"QjDZesRvLCmcrZLxgN677nXnVLA=\");\n_c2 = InfoTooltip;\nexport default Ife4;\nvar _c, _c2;\n$RefreshReg$(_c, \"Ife4\");\n$RefreshReg$(_c2, \"InfoTooltip\");","map":{"version":3,"names":["React","useContext","useState","useEffect","useNavigate","NavBar","EmployeeContext","jsxDEV","_jsxDEV","Ife4","previousLocalEmployeeCount","_s","navigate","employeeCount","initialLocalCount","maxCount","localEmployeeCount","setLocalEmployeeCount","qualityCounts","setQualityCounts","displayCounters","setDisplayCounters","goToInterface5","totalSelectedDevices","Object","values","reduce","sum","count","alert","handleBackClick","incrementCount","newValue","parseInt","prompt","isNaN","decrementCount","handleQualityIncrement","quality","prevCounts","handleQualityDecrement","handleQualityClick","prevState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","InfoTooltip","keys","map","_c","_s2","isVisible","setIsVisible","toggleTooltip","_c2","$RefreshReg$"],"sources":["C:/Users/Hp/topnet-client/src/components/Entreprise/Ife4.jsx"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../../styles.css';  // Assurez-vous d'importer les styles\r\nimport NavBar from '../NavBar';\r\nimport { EmployeeContext } from '../EmployeeContext';  // Importe le contexte\r\n\r\nconst Ife4 = ({ previousLocalEmployeeCount }) => {\r\n    const navigate = useNavigate();\r\n    const { employeeCount } = useContext(EmployeeContext);  // Récupère la valeur globale de employeeCount\r\n\r\n    // Calcul de la valeur initiale de localEmployeeCount\r\n    const initialLocalCount = employeeCount > previousLocalEmployeeCount \r\n        ? employeeCount - previousLocalEmployeeCount \r\n        : 0;\r\n\r\n    // Limite maximale pour le compteur local\r\n    const maxCount = employeeCount > previousLocalEmployeeCount \r\n        ? employeeCount - previousLocalEmployeeCount \r\n        : employeeCount;\r\n\r\n    const [localEmployeeCount, setLocalEmployeeCount] = useState(initialLocalCount);\r\n    const [qualityCounts, setQualityCounts] = useState({\r\n        \"Petit groupe (3-5)\": 0,\r\n        \"Grand groupe (7+)\": 0,\r\n        \"Basse définition\": 0,\r\n        \"Définition standard\": 0,\r\n        \"HD (1080p)\": 0,\r\n        \"Je ne sais pas\": 0,\r\n    });\r\n    const [displayCounters, setDisplayCounters] = useState({});\r\n\r\n    // Mise à jour de localEmployeeCount si employeeCount et previousLocalEmployeeCount sont égaux\r\n    useEffect(() => {\r\n        if (employeeCount === previousLocalEmployeeCount) {\r\n            setLocalEmployeeCount(0);  // Réinitialise à 0 pour une mise à jour manuelle\r\n        }\r\n    }, [employeeCount, previousLocalEmployeeCount]);\r\n\r\n    const goToInterface5 = () => {\r\n        const totalSelectedDevices = Object.values(qualityCounts).reduce((sum, count) => sum + count, 0);\r\n        if (totalSelectedDevices === localEmployeeCount) {\r\n            navigate('/Entreprise/Ife5');  // Navigue vers Interface 5 seulement si la condition est remplie\r\n        } else {\r\n            alert('Le nombre total de participants doit correspondre au nombre d’employés.');\r\n        }\r\n    };\r\n\r\n    const handleBackClick = () => {\r\n        navigate('/Entreprise/Ifee3');  // Retourne à l'interface précédente\r\n    };\r\n\r\n    const incrementCount = () => {\r\n        if (localEmployeeCount < maxCount) {\r\n            setLocalEmployeeCount(localEmployeeCount + 1);\r\n        } else {\r\n            // Demande une nouvelle valeur à l'utilisateur\r\n            const newValue = parseInt(prompt(`Le nombre a atteint la limite de ${employeeCount}. Entrez une nouvelle valeur (max: ${employeeCount}) :`), 10);\r\n    \r\n            // Vérifie si la nouvelle valeur est valide\r\n            if (!isNaN(newValue) && newValue >= 0 && newValue <= employeeCount) {\r\n                setLocalEmployeeCount(newValue);  // Réinitialise à la nouvelle valeur\r\n            } else {\r\n                alert(`Veuillez entrer un nombre valide entre 0 et ${employeeCount}.`);\r\n            }\r\n        }\r\n    };\r\n    \r\n\r\n    const decrementCount = () => {\r\n        if (localEmployeeCount > 0) {\r\n            setLocalEmployeeCount(localEmployeeCount - 1);\r\n        }\r\n    };\r\n\r\n    const handleQualityIncrement = (quality) => {\r\n        const totalSelectedDevices = Object.values(qualityCounts).reduce((sum, count) => sum + count, 0);\r\n        if (totalSelectedDevices < localEmployeeCount) {\r\n            setQualityCounts(prevCounts => ({\r\n                ...prevCounts,\r\n                [quality]: prevCounts[quality] + 1,\r\n            }));\r\n        } else {\r\n            alert('Le nombre total d’appareils a atteint la limite.');\r\n        }\r\n    };\r\n\r\n    const handleQualityDecrement = (quality) => {\r\n        if (qualityCounts[quality] > 0) {\r\n            setQualityCounts(prevCounts => ({\r\n                ...prevCounts,\r\n                [quality]: prevCounts[quality] - 1,\r\n            }));\r\n        }\r\n    };\r\n\r\n    const handleQualityClick = (quality) => {\r\n        setDisplayCounters(prevState => ({\r\n            ...prevState,\r\n            [quality]: true\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div className=\"main-content\">\r\n            <div className=\"header\">\r\n                <NavBar />\r\n            </div>\r\n\r\n            <div className=\"info-tooltip-section\">\r\n                <div className=\"go-back-text\" onClick={handleBackClick}>\r\n                    ❮ Retour\r\n                </div>\r\n                <InfoTooltip />\r\n            </div>\r\n\r\n            <div className=\"survey-content\">\r\n                <h3>Combien d'employés seraient en appels vidéo ?</h3>\r\n                <p className=\"survey-description\">Vidéoconférence, Skype, etc.</p>\r\n                <p className=\"survey-description\">Sur {localEmployeeCount}</p>  {/* Affiche la valeur globale */}\r\n\r\n                <div className=\"employee-counter\">\r\n                    <button className=\"counter-btn\" onClick={decrementCount}>-</button>\r\n                    <span className=\"employee-count\">{localEmployeeCount}</span>  {/* Affiche la valeur locale */}\r\n                    <button className=\"counter-btn\" onClick={incrementCount}>+</button>\r\n                </div>\r\n\r\n                <button className=\"next-btn\" onClick={goToInterface5}>Suivant</button>\r\n            </div>\r\n\r\n            {/* Deuxième partie : Section qualité vidéo */}\r\n            <div className=\"video-quality-section\">\r\n                <p className=\"quality-description\">\r\n                    Facultatif: Sélectionnez la qualité vidéo et le nombre de personnes sur les appels vidéo ?\r\n                </p>\r\n                <div className=\"quality-options\">\r\n                    {Object.keys(qualityCounts).map((quality) => (\r\n                        <div key={quality} className=\"quality-option\">\r\n                            <button className=\"quality-btn\" onClick={() => handleQualityClick(quality)}>\r\n                                {quality}\r\n                            </button>\r\n\r\n                            {/* Affiche le compteur seulement si le bouton a été cliqué */}\r\n                            {displayCounters[quality] && (\r\n                                <div className=\"quality-counter\">\r\n                                    <button \r\n                                        className=\"counter-butn\"\r\n                                        onClick={() => handleQualityDecrement(quality)}\r\n                                    >\r\n                                        -\r\n                                    </button>\r\n                                    <span className=\"quality-count\">\r\n                                        {qualityCounts[quality]} devices\r\n                                    </span>\r\n                                    <button \r\n                                        className=\"counter-butn\"\r\n                                        onClick={() => handleQualityIncrement(quality)}\r\n                                    >\r\n                                        +\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction InfoTooltip() {\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    const toggleTooltip = () => {\r\n        setIsVisible(!isVisible);\r\n    };\r\n\r\n    return (\r\n        <div className=\"tooltip-container\">\r\n            <div className=\"tooltip-icon\" onClick={toggleTooltip}>?</div>\r\n            {isVisible && (\r\n                <div className=\"tooltip-box\">\r\n                    <p>\r\n                        Les appels vidéo ne nécessitent pas de vitesses élevées, mais vous aurez besoin de plus de bande passante pour des appels vidéo HD ou des conférences avec de grands groupes.\r\n                    </p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Ife4;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}