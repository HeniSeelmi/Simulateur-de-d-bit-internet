{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\topnet-client\\\\src\\\\components\\\\Entreprise\\\\Ife2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../styles.css'; // Assurez-vous d'importer les styles\nimport NavBar from '../NavBar';\nimport { EmployeeContext } from '../EmployeeContext'; // Importe le contexte\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ife2 = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    employeeCount\n  } = useContext(EmployeeContext); // Récupère la valeur globale de employeeCount\n  const [localEmployeeCount, setLocalEmployeeCount] = useState(0); // Initialise un compteur local à 0\n  const [qualityCounts, setQualityCounts] = useState({\n    \"Vidéo floue\": 0,\n    \"Basse définition\": 0,\n    \"Définition standard\": 0,\n    \"HD (1080p)\": 0,\n    \"Ultra HD (4k)\": 0,\n    \"Je ne sais pas\": 0\n  }); // Compteurs pour chaque qualité vidéo\n\n  const goToInterface3 = () => {\n    navigate('/Entreprise/Ifee3'); // Navigue vers l'interface 3\n  };\n  const handleBackClick = () => {\n    navigate('/Entreprise/Ife'); // Retourne à l'interface précédente\n  };\n  const incrementCount = () => {\n    if (localEmployeeCount < employeeCount) {\n      setLocalEmployeeCount(localEmployeeCount + 1); // Modifie uniquement la valeur locale\n    }\n  };\n  const decrementCount = () => {\n    if (localEmployeeCount > 0) {\n      setLocalEmployeeCount(localEmployeeCount - 1); // Modifie uniquement la valeur locale\n    }\n  };\n  const handleQualityClick = quality => {\n    setQualityCounts(prevCounts => ({\n      ...prevCounts,\n      [quality]: prevCounts[quality] + 1 // Incrémente le compteur pour la qualité vidéo sélectionnée\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-tooltip-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"go-back-text\",\n        onClick: handleBackClick,\n        children: \"\\u276E Retour\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"survey-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pensez \\xE0 votre moment le plus occup\\xE9 pour l'utilisation d'Internet. Combien d'employ\\xE9s diffusent la vid\\xE9o en m\\xEAme temps? (YouTube, Pluralsight, Lynda.com, etc.)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"survey-description\",\n        children: [\"Sur \", employeeCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employee-counter\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"counter-btn\",\n          onClick: decrementCount,\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"employee-count\",\n          children: localEmployeeCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"counter-btn\",\n          onClick: incrementCount,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-btn\",\n        onClick: goToInterface3,\n        children: \"Suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-quality-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quality-description\",\n        children: \"Facultatif: s\\xE9lectionnez la qualit\\xE9 de la vid\\xE9o que vous diffuserez en continu. La plupart des services comme YouTube et Pluralsight diffusent en HD.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quality-options\",\n        children: Object.keys(qualityCounts).map(quality => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quality-option\",\n          children: [qualityCounts[quality] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"quality-count\",\n            children: [qualityCounts[quality], \" devices\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this) // Affiche le compteur au-dessus du bouton après un clic\n          , /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"quality-btn\",\n            onClick: () => handleQualityClick(quality),\n            children: quality\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)]\n        }, quality, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Ife2, \"nUuKVUw/Q4i/3ZrGZgisPOim2qY=\", false, function () {\n  return [useNavigate];\n});\n_c = Ife2;\nexport default Ife2;\nvar _c;\n$RefreshReg$(_c, \"Ife2\");","map":{"version":3,"names":["React","useContext","useState","useNavigate","NavBar","EmployeeContext","jsxDEV","_jsxDEV","Ife2","_s","navigate","employeeCount","localEmployeeCount","setLocalEmployeeCount","qualityCounts","setQualityCounts","goToInterface3","handleBackClick","incrementCount","decrementCount","handleQualityClick","quality","prevCounts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Object","keys","map","_c","$RefreshReg$"],"sources":["C:/Users/Hp/topnet-client/src/components/Entreprise/Ife2.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../../styles.css';  // Assurez-vous d'importer les styles\r\nimport NavBar from '../NavBar';\r\nimport { EmployeeContext } from '../EmployeeContext';  // Importe le contexte\r\n\r\nconst Ife2 = () => {\r\n    const navigate = useNavigate();\r\n    const { employeeCount } = useContext(EmployeeContext);  // Récupère la valeur globale de employeeCount\r\n    const [localEmployeeCount, setLocalEmployeeCount] = useState(0);  // Initialise un compteur local à 0\r\n    const [qualityCounts, setQualityCounts] = useState({\r\n        \"Vidéo floue\": 0,\r\n        \"Basse définition\": 0,\r\n        \"Définition standard\": 0,\r\n        \"HD (1080p)\": 0,\r\n        \"Ultra HD (4k)\": 0,\r\n        \"Je ne sais pas\": 0,\r\n    });  // Compteurs pour chaque qualité vidéo\r\n\r\n    const goToInterface3 = () => {\r\n        navigate('/Entreprise/Ifee3');  // Navigue vers l'interface 3\r\n    };\r\n\r\n    const handleBackClick = () => {\r\n        navigate('/Entreprise/Ife');  // Retourne à l'interface précédente\r\n    };\r\n\r\n    const incrementCount = () => {\r\n        if (localEmployeeCount < employeeCount) {\r\n            setLocalEmployeeCount(localEmployeeCount + 1);  // Modifie uniquement la valeur locale\r\n        }\r\n    }\r\n\r\n    const decrementCount = () => {\r\n        if (localEmployeeCount > 0) {\r\n            setLocalEmployeeCount(localEmployeeCount - 1);  // Modifie uniquement la valeur locale\r\n        }\r\n    };\r\n\r\n    const handleQualityClick = (quality) => {\r\n        setQualityCounts(prevCounts => ({\r\n            ...prevCounts,\r\n            [quality]: prevCounts[quality] + 1,  // Incrémente le compteur pour la qualité vidéo sélectionnée\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div className=\"main-content\">\r\n            <div className=\"header\">\r\n                <NavBar />\r\n            </div>\r\n\r\n            <div className=\"info-tooltip-section\">\r\n                <div className=\"go-back-text\" onClick={handleBackClick}>\r\n                    ❮ Retour\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"survey-content\">\r\n                <h3>Pensez à votre moment le plus occupé pour l'utilisation d'Internet. Combien d'employés diffusent la vidéo en même temps? (YouTube, Pluralsight, Lynda.com, etc.)</h3>\r\n                <p className=\"survey-description\">Sur {employeeCount}</p>  {/* Affiche la valeur du contexte sans l'utiliser pour le compteur local */}\r\n                \r\n                <div className=\"employee-counter\">\r\n                    <button className=\"counter-btn\" onClick={decrementCount}>-</button>\r\n                    <span className=\"employee-count\">{localEmployeeCount}</span>  {/* Affiche la valeur locale */}\r\n                    <button className=\"counter-btn\" onClick={incrementCount}>+</button>\r\n                </div>\r\n                \r\n                <button className=\"next-btn\" onClick={goToInterface3}>Suivant</button>\r\n            </div>\r\n\r\n            {/* Deuxième partie : Section qualité vidéo */}\r\n            <div className=\"video-quality-section\">\r\n                <p className=\"quality-description\">\r\n                    Facultatif: sélectionnez la qualité de la vidéo que vous diffuserez en continu. La plupart des services comme YouTube et Pluralsight diffusent en HD.\r\n                </p>\r\n                <div className=\"quality-options\">\r\n                    {Object.keys(qualityCounts).map((quality) => (\r\n                        <div key={quality} className=\"quality-option\">\r\n                            {qualityCounts[quality] > 0 && (\r\n                                <span className=\"quality-count\">{qualityCounts[quality]} devices</span>  // Affiche le compteur au-dessus du bouton après un clic\r\n                            )}\r\n                            <button className=\"quality-btn\" onClick={() => handleQualityClick(quality)}>\r\n                                {quality}\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Ife2;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}