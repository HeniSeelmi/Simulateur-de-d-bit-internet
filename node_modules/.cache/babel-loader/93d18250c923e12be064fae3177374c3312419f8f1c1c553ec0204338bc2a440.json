{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\topnet-client\\\\src\\\\components\\\\Entreprise\\\\Ife4.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../styles.css';\nimport NavBar from '../NavBar';\nimport { EmployeeContext } from '../EmployeeContext';\nimport { calculateSpeed } from '../calculateSpeed'; // Assurez-vous d'importer cette fonction\n\n// Les valeurs de qualité pour les différents boutons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst qualityValues = {\n  \"Aucun\": 0,\n  \"Un peu\": 2,\n  \"Beaucoup\": 5,\n  \"Je ne sais pas\": 0\n};\nconst Ife4 = ({\n  previousLocalEmployeeCount,\n  accumulatedSpeed,\n  setAccumulatedSpeed\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    employeeCount\n  } = useContext(EmployeeContext);\n  const initialLocalCount = employeeCount > previousLocalEmployeeCount ? employeeCount - previousLocalEmployeeCount : 0;\n  const maxCount = employeeCount > previousLocalEmployeeCount ? employeeCount - previousLocalEmployeeCount : employeeCount;\n  const [localEmployeeCount, setLocalEmployeeCount] = useState(initialLocalCount);\n  const [qualityCounts, setQualityCounts] = useState({\n    \"Aucun\": 0,\n    \"Un peu\": 0,\n    \"Beaucoup\": 0,\n    \"Je ne sais pas\": 0\n  });\n  const [displayCounters, setDisplayCounters] = useState({});\n  const [selectedGroupQuality, setSelectedGroupQuality] = useState(null);\n  const [selectedQuality, setSelectedQuality] = useState(0); // Ajout pour gérer la qualité sélectionnée\n  // Gérer la sélection du groupe simple\n\n  // Mise à jour si le nombre d'employés change\n  useEffect(() => {\n    if (employeeCount === previousLocalEmployeeCount) {\n      setLocalEmployeeCount(initialLocalCount);\n    }\n  }, [employeeCount, previousLocalEmployeeCount, initialLocalCount]);\n\n  // Calcul du débit en fonction du nombre d'employés locaux et de la qualité sélectionnée\n  const speed = calculateSpeed(localEmployeeCount, selectedGroupQuality ? selectedGroupQuality.value : 0);\n  const goToInterface4 = () => {\n    const totalSelectedDevices = Object.values(qualityCounts).reduce((sum, count) => sum + count, 0);\n    if (totalSelectedDevices === localEmployeeCount) {\n      setAccumulatedSpeed(accumulatedSpeed + speed); // Mettre à jour le débit accumulé\n      navigate('/Entreprise/Ife4'); // Navigue vers Interface 4 seulement si la condition est remplie\n    } else {\n      alert('Le nombre total d’appareils doit correspondre au nombre d’employés.');\n    }\n  };\n  const handleBackClick = () => {\n    navigate('/Entreprise/Ife2'); // Retourne à l'interface précédente (Ife2)\n  };\n  const incrementCount = () => {\n    if (localEmployeeCount < maxCount) {\n      setLocalEmployeeCount(localEmployeeCount + 1); // Incrémente jusqu'à la limite de maxCount\n    } else {\n      alert(`Le nombre ne peut pas dépasser ${employeeCount}.`);\n    }\n  };\n  const decrementCount = () => {\n    if (localEmployeeCount > 0) {\n      setLocalEmployeeCount(localEmployeeCount - 1);\n    }\n  };\n  const handleQualityIncrement = quality => {\n    const totalSelectedDevices = Object.values(qualityCounts).reduce((sum, count) => sum + count, 0);\n    if (totalSelectedDevices < localEmployeeCount) {\n      setQualityCounts(prevCounts => ({\n        ...prevCounts,\n        [quality]: prevCounts[quality] + 1\n      }));\n    } else {\n      alert('Le nombre total d’appareils sélectionnés a atteint la limite.');\n    }\n  };\n  const handleQualityDecrement = quality => {\n    if (qualityCounts[quality] > 0) {\n      setQualityCounts(prevCounts => ({\n        ...prevCounts,\n        [quality]: prevCounts[quality] - 1\n      }));\n    }\n  };\n  const handleQualityClick = quality => {\n    setDisplayCounters(prevState => ({\n      ...prevState,\n      [quality]: true\n    }));\n    setSelectedQuality(qualityValues[quality]);\n  };\n\n  // Gérer la sélection de qualité de groupe simple\n  const handleGroupQualityClick = groupQuality => {\n    setSelectedGroupQuality(qualityValues[groupQuality]); // Sélectionner la qualité de groupe\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(NavBar, {\n        progress: 60,\n        speed: accumulatedSpeed + speed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-tooltip-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"go-back-text\",\n        onClick: handleBackClick,\n        children: \"\\u276E Retour\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"survey-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Combien d'employ\\xE9s naviguent sur Internet ou v\\xE9rifient leurs courriels en m\\xEAme temps?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"survey-description\",\n        children: [\"Sur \", maxCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employee-counter\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"counter-btn\",\n          onClick: decrementCount,\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"employee-count\",\n          children: localEmployeeCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"counter-btn\",\n          onClick: incrementCount,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-btn\",\n        onClick: goToInterface4,\n        children: \"Suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-quality-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quality-description\",\n        children: \"Facultatif: S\\xE9lectionnez la qualit\\xE9 vid\\xE9o et le nombre de personnes sur les appels vid\\xE9o?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-quality-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `quality-btn ${selectedGroupQuality && selectedGroupQuality.name === \"Petit groupe\" ? 'selected' : ''}`,\n          onClick: () => handleGroupQualityClick({\n            name: \"Petit groupe\",\n            value: 5\n          }),\n          children: \"Petit groupe (3-5)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `quality-btn ${selectedGroupQuality && selectedGroupQuality.name === \"Grand groupe\" ? 'selected' : ''}`,\n          onClick: () => handleGroupQualityClick({\n            name: \"Grand groupe\",\n            value: 10\n          }),\n          children: \"Grand groupe (7+)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quality-options\",\n        children: Object.keys(qualityCounts).map(quality => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quality-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"quality-btn\",\n            onClick: () => handleQualityClick(quality),\n            children: quality\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this), displayCounters[quality] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quality-counter\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"counter-btn\",\n              onClick: () => handleQualityDecrement(quality),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"quality-count\",\n              children: [qualityCounts[quality], \" appareils\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"counter-btn\",\n              onClick: () => handleQualityIncrement(quality),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 33\n          }, this)]\n        }, quality, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_s(Ife4, \"zm7/cj9B4tHM5X80KiSqjuoegdk=\", false, function () {\n  return [useNavigate];\n});\n_c = Ife4;\nfunction InfoTooltip() {\n  _s2();\n  const [isVisible, setIsVisible] = useState(false);\n  const toggleTooltip = () => {\n    setIsVisible(!isVisible);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tooltip-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip-icon\",\n      onClick: toggleTooltip,\n      children: \"?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), isVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip-box\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Bien que des activit\\xE9s telles que la messagerie \\xE9lectronique et la navigation sur Internet n'utilisent g\\xE9n\\xE9ralement pas une grande quantit\\xE9 de bande passante, les canaux de m\\xE9dias sociaux riches en vid\\xE9os ou le t\\xE9l\\xE9chargement fr\\xE9quent d'images HD volumineuses peuvent affecter les performances du r\\xE9seau.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 9\n  }, this);\n}\n_s2(InfoTooltip, \"QjDZesRvLCmcrZLxgN677nXnVLA=\");\n_c2 = InfoTooltip;\nexport default Ife4;\nvar _c, _c2;\n$RefreshReg$(_c, \"Ife4\");\n$RefreshReg$(_c2, \"InfoTooltip\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","NavBar","EmployeeContext","calculateSpeed","jsxDEV","_jsxDEV","qualityValues","Ife4","previousLocalEmployeeCount","accumulatedSpeed","setAccumulatedSpeed","_s","navigate","employeeCount","initialLocalCount","maxCount","localEmployeeCount","setLocalEmployeeCount","qualityCounts","setQualityCounts","displayCounters","setDisplayCounters","selectedGroupQuality","setSelectedGroupQuality","selectedQuality","setSelectedQuality","speed","value","goToInterface4","totalSelectedDevices","Object","values","reduce","sum","count","alert","handleBackClick","incrementCount","decrementCount","handleQualityIncrement","quality","prevCounts","handleQualityDecrement","handleQualityClick","prevState","handleGroupQualityClick","groupQuality","className","children","progress","fileName","_jsxFileName","lineNumber","columnNumber","onClick","InfoTooltip","name","keys","map","_c","_s2","isVisible","setIsVisible","toggleTooltip","_c2","$RefreshReg$"],"sources":["C:/Users/Hp/topnet-client/src/components/Entreprise/Ife4.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../../styles.css';  \r\nimport NavBar from '../NavBar';\r\nimport { EmployeeContext } from '../EmployeeContext';\r\nimport { calculateSpeed } from '../calculateSpeed'; // Assurez-vous d'importer cette fonction\r\n\r\n// Les valeurs de qualité pour les différents boutons\r\nconst qualityValues = {\r\n    \"Aucun\": 0,\r\n    \"Un peu\": 2,\r\n    \"Beaucoup\": 5,\r\n    \"Je ne sais pas\": 0,\r\n};\r\n\r\nconst Ife4 = ({ previousLocalEmployeeCount, accumulatedSpeed, setAccumulatedSpeed }) => {\r\n    const navigate = useNavigate();\r\n    const { employeeCount } = useContext(EmployeeContext);\r\n\r\n    const initialLocalCount = employeeCount > previousLocalEmployeeCount \r\n        ? employeeCount - previousLocalEmployeeCount \r\n        : 0;\r\n\r\n    const maxCount = employeeCount > previousLocalEmployeeCount \r\n        ? employeeCount - previousLocalEmployeeCount \r\n        : employeeCount;\r\n\r\n    const [localEmployeeCount, setLocalEmployeeCount] = useState(initialLocalCount);\r\n    const [qualityCounts, setQualityCounts] = useState({\r\n        \"Aucun\": 0,\r\n        \"Un peu\": 0,\r\n        \"Beaucoup\": 0,\r\n        \"Je ne sais pas\": 0,\r\n    });\r\n\r\n    const [displayCounters, setDisplayCounters] = useState({});\r\n    const [selectedGroupQuality, setSelectedGroupQuality] = useState(null); \r\n    const [selectedQuality, setSelectedQuality] = useState(0);  // Ajout pour gérer la qualité sélectionnée\r\n    // Gérer la sélection du groupe simple\r\n\r\n    // Mise à jour si le nombre d'employés change\r\n    useEffect(() => {\r\n        if (employeeCount === previousLocalEmployeeCount) {\r\n            setLocalEmployeeCount(initialLocalCount);\r\n        }\r\n    }, [employeeCount, previousLocalEmployeeCount, initialLocalCount]);\r\n\r\n    // Calcul du débit en fonction du nombre d'employés locaux et de la qualité sélectionnée\r\n    const speed = calculateSpeed(localEmployeeCount, selectedGroupQuality ? selectedGroupQuality.value : 0);\r\n\r\n    const goToInterface4 = () => {\r\n        const totalSelectedDevices = Object.values(qualityCounts).reduce((sum, count) => sum + count, 0);\r\n        if (totalSelectedDevices === localEmployeeCount) {\r\n            setAccumulatedSpeed(accumulatedSpeed + speed); // Mettre à jour le débit accumulé\r\n            navigate('/Entreprise/Ife4');  // Navigue vers Interface 4 seulement si la condition est remplie\r\n        } else {\r\n            alert('Le nombre total d’appareils doit correspondre au nombre d’employés.');\r\n        }\r\n    };\r\n\r\n    const handleBackClick = () => {\r\n        navigate('/Entreprise/Ife2');  // Retourne à l'interface précédente (Ife2)\r\n    };\r\n\r\n    const incrementCount = () => {\r\n        if (localEmployeeCount < maxCount) {\r\n            setLocalEmployeeCount(localEmployeeCount + 1);  // Incrémente jusqu'à la limite de maxCount\r\n        } else {\r\n            alert(`Le nombre ne peut pas dépasser ${employeeCount}.`);\r\n        }\r\n    };\r\n\r\n    const decrementCount = () => {\r\n        if (localEmployeeCount > 0) {\r\n            setLocalEmployeeCount(localEmployeeCount - 1);\r\n        }\r\n    };\r\n\r\n    const handleQualityIncrement = (quality) => {\r\n        const totalSelectedDevices = Object.values(qualityCounts).reduce((sum, count) => sum + count, 0);\r\n        if (totalSelectedDevices < localEmployeeCount) {\r\n            setQualityCounts(prevCounts => ({\r\n                ...prevCounts,\r\n                [quality]: prevCounts[quality] + 1,\r\n            }));\r\n        } else {\r\n            alert('Le nombre total d’appareils sélectionnés a atteint la limite.');\r\n        }\r\n    };\r\n\r\n    const handleQualityDecrement = (quality) => {\r\n        if (qualityCounts[quality] > 0) {\r\n            setQualityCounts(prevCounts => ({\r\n                ...prevCounts,\r\n                [quality]: prevCounts[quality] - 1,\r\n            }));\r\n        }\r\n    };\r\n    const handleQualityClick = (quality) => {\r\n        setDisplayCounters(prevState => ({\r\n            ...prevState,\r\n            [quality]: true\r\n        }));\r\n        setSelectedQuality(qualityValues[quality]);\r\n    };\r\n\r\n    // Gérer la sélection de qualité de groupe simple\r\n    const handleGroupQualityClick = (groupQuality) => {\r\n        setSelectedGroupQuality(qualityValues[groupQuality]);  // Sélectionner la qualité de groupe\r\n    };\r\n\r\n    return (\r\n        <div className=\"main-content\">\r\n            <div className=\"header\">\r\n                <NavBar progress={60} speed={accumulatedSpeed + speed} />\r\n            </div>\r\n\r\n            <div className=\"info-tooltip-section\">\r\n                <div className=\"go-back-text\" onClick={handleBackClick}>\r\n                    ❮ Retour\r\n                </div>\r\n                <InfoTooltip />\r\n            </div>\r\n\r\n            <div className=\"survey-content\">\r\n                <h3>Combien d'employés naviguent sur Internet ou vérifient leurs courriels en même temps?</h3>\r\n                <p className=\"survey-description\">Sur {maxCount}</p>\r\n                \r\n                <div className=\"employee-counter\">\r\n                    <button className=\"counter-btn\" onClick={decrementCount}>-</button>\r\n                    <span className=\"employee-count\">{localEmployeeCount}</span>\r\n                    <button className=\"counter-btn\" onClick={incrementCount}>+</button>\r\n                </div>\r\n                <button className=\"next-btn\" onClick={goToInterface4}>Suivant</button>\r\n            </div>\r\n\r\n            <div className=\"video-quality-section\">\r\n                <p className=\"quality-description\">\r\n                Facultatif: Sélectionnez la qualité vidéo et le nombre de personnes sur les appels vidéo?\r\n                </p>\r\n                <div className=\"group-quality-options\">\r\n                    <button \r\n                        className={`quality-btn ${selectedGroupQuality && selectedGroupQuality.name === \"Petit groupe\" ? 'selected' : ''}`} \r\n                        onClick={() => handleGroupQualityClick({ name: \"Petit groupe\", value: 5 })}\r\n                    >\r\n                        Petit groupe (3-5)\r\n                    </button>\r\n                    <button \r\n                        className={`quality-btn ${selectedGroupQuality && selectedGroupQuality.name === \"Grand groupe\" ? 'selected' : ''}`} \r\n                        onClick={() => handleGroupQualityClick({ name: \"Grand groupe\", value: 10 })}\r\n                    >\r\n                        Grand groupe (7+)\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"quality-options\">\r\n                    {Object.keys(qualityCounts).map((quality) => (\r\n                        <div key={quality} className=\"quality-option\">\r\n                            <button className=\"quality-btn\" onClick={() => handleQualityClick(quality)}>\r\n                                {quality}\r\n                            </button>\r\n\r\n                            {displayCounters[quality] && (\r\n                                <div className=\"quality-counter\">\r\n                                    <button \r\n                                        className=\"counter-btn\"\r\n                                        onClick={() => handleQualityDecrement(quality)}\r\n                                    >\r\n                                        -\r\n                                    </button>\r\n                                    <span className=\"quality-count\">\r\n                                        {qualityCounts[quality]} appareils\r\n                                    </span>\r\n                                    <button \r\n                                        className=\"counter-btn\"\r\n                                        onClick={() => handleQualityIncrement(quality)}\r\n                                    >\r\n                                        +\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction InfoTooltip() {\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    const toggleTooltip = () => {\r\n        setIsVisible(!isVisible);\r\n    };\r\n\r\n    return (\r\n        <div className=\"tooltip-container\">\r\n            <div className=\"tooltip-icon\" onClick={toggleTooltip}>?</div>\r\n            {isVisible && (\r\n                <div className=\"tooltip-box\">\r\n                    <p>\r\n                        Bien que des activités telles que la messagerie électronique et la navigation sur Internet n'utilisent généralement pas une grande quantité de bande passante, les canaux de médias sociaux riches en vidéos ou le téléchargement fréquent d'images HD volumineuses peuvent affecter les performances du réseau.\r\n                    </p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Ife4;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}