{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\topnet-client\\\\src\\\\components\\\\Residentiel\\\\Interface1.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Interface1({\n  accumulatedSpeed,\n  setAccumulatedSpeed\n}) {\n  _s();\n  const [clicked, setClicked] = useState(false); // Nouvel état pour suivre le clic\n  const navigate = useNavigate();\n\n  // Fonction appelée lorsque l'utilisateur clique sur un bouton\n  const handleClick = value => {\n    const updatedSpeed = calculateNewSpeed(accumulatedSpeed, value);\n    setAccumulatedSpeed(updatedSpeed); // Mise à jour de la vitesse accumulée\n    setClicked(true); // Mise à jour de l'état \"clicked\" à vrai\n  };\n\n  // Utilisation de useEffect pour gérer la navigation après le clic\n  useEffect(() => {\n    if (clicked) {\n      // Navigue uniquement si l'utilisateur a cliqué sur un bouton\n      navigate('/Residentiel/Interface2');\n    }\n  }, [clicked, navigate]); // Exécution uniquement lorsque 'clicked' change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"survey-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Combien d'appareils dans votre maison se connectent \\xE0 Internet ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"survey-btn\",\n        onClick: () => handleClick(0.5),\n        children: \"1-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"survey-btn\",\n        onClick: () => handleClick(1),\n        children: \"4-7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"survey-btn\",\n        onClick: () => handleClick(1.5),\n        children: \"8-10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"survey-btn\",\n        onClick: () => handleClick(2),\n        children: \"10+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Interface1, \"tlAaqYH2CCWMxce5yRrJBqBYRBo=\", false, function () {\n  return [useNavigate];\n});\n_c = Interface1;\nexport default Interface1;\nvar _c;\n$RefreshReg$(_c, \"Interface1\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Interface1","accumulatedSpeed","setAccumulatedSpeed","_s","clicked","setClicked","navigate","handleClick","value","updatedSpeed","calculateNewSpeed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Hp/topnet-client/src/components/Residentiel/Interface1.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Interface1({ accumulatedSpeed, setAccumulatedSpeed }) {\r\n  const [clicked, setClicked] = useState(false); // Nouvel état pour suivre le clic\r\n  const navigate = useNavigate();\r\n\r\n  // Fonction appelée lorsque l'utilisateur clique sur un bouton\r\n  const handleClick = (value) => {\r\n    const updatedSpeed = calculateNewSpeed(accumulatedSpeed, value);\r\n    setAccumulatedSpeed(updatedSpeed); // Mise à jour de la vitesse accumulée\r\n    setClicked(true); // Mise à jour de l'état \"clicked\" à vrai\r\n  };\r\n\r\n  // Utilisation de useEffect pour gérer la navigation après le clic\r\n  useEffect(() => {\r\n    if (clicked) {\r\n      // Navigue uniquement si l'utilisateur a cliqué sur un bouton\r\n      navigate('/Residentiel/Interface2');\r\n    }\r\n  }, [clicked, navigate]); // Exécution uniquement lorsque 'clicked' change\r\n\r\n  return (\r\n    <div className=\"main-content\">\r\n      <div className=\"header\">\r\n        {/* Par exemple, une barre de navigation ici */}\r\n      </div>\r\n      <div className=\"survey-content\">\r\n        <h1>Combien d'appareils dans votre maison se connectent à Internet ?</h1>\r\n        <button className=\"survey-btn\" onClick={() => handleClick(0.5)}>1-3</button>\r\n        <button className=\"survey-btn\" onClick={() => handleClick(1)}>4-7</button>\r\n        <button className=\"survey-btn\" onClick={() => handleClick(1.5)}>8-10</button>\r\n        <button className=\"survey-btn\" onClick={() => handleClick(2)}>10+</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Interface1;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,UAAUA,CAAC;EAAEC,gBAAgB;EAAEC;AAAoB,CAAC,EAAE;EAAAC,EAAA;EAC7D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMU,WAAW,GAAIC,KAAK,IAAK;IAC7B,MAAMC,YAAY,GAAGC,iBAAiB,CAACT,gBAAgB,EAAEO,KAAK,CAAC;IAC/DN,mBAAmB,CAACO,YAAY,CAAC,CAAC,CAAC;IACnCJ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;EACpB,CAAC;;EAED;EACAV,SAAS,CAAC,MAAM;IACd,IAAIS,OAAO,EAAE;MACX;MACAE,QAAQ,CAAC,yBAAyB,CAAC;IACrC;EACF,CAAC,EAAE,CAACF,OAAO,EAAEE,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEzB,oBACEP,OAAA;IAAKY,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3Bb,OAAA;MAAKY,SAAS,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElB,CAAC,eACNjB,OAAA;MAAKY,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7Bb,OAAA;QAAAa,QAAA,EAAI;MAAgE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzEjB,OAAA;QAAQY,SAAS,EAAC,YAAY;QAACM,OAAO,EAAEA,CAAA,KAAMV,WAAW,CAAC,GAAG,CAAE;QAAAK,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5EjB,OAAA;QAAQY,SAAS,EAAC,YAAY;QAACM,OAAO,EAAEA,CAAA,KAAMV,WAAW,CAAC,CAAC,CAAE;QAAAK,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1EjB,OAAA;QAAQY,SAAS,EAAC,YAAY;QAACM,OAAO,EAAEA,CAAA,KAAMV,WAAW,CAAC,GAAG,CAAE;QAAAK,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7EjB,OAAA;QAAQY,SAAS,EAAC,YAAY;QAACM,OAAO,EAAEA,CAAA,KAAMV,WAAW,CAAC,CAAC,CAAE;QAAAK,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACb,EAAA,CAjCQH,UAAU;EAAA,QAEAH,WAAW;AAAA;AAAAqB,EAAA,GAFrBlB,UAAU;AAmCnB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}