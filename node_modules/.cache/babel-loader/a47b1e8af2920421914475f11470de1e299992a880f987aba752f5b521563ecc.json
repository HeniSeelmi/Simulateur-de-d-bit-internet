{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\topnet-client\\\\src\\\\components\\\\Entreprise\\\\Ifee3.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../styles.css';\nimport NavBar from '../NavBar';\nimport { EmployeeContext } from '../EmployeeContext';\nimport { calculateSpeed } from '../calculateSpeed';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ifee3 = ({\n  previousLocalEmployeeCount\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    employeeCount,\n    setSpeed\n  } = useContext(EmployeeContext);\n  const initialLocalCount = employeeCount > previousLocalEmployeeCount ? employeeCount - previousLocalEmployeeCount : 0;\n  const maxCount = employeeCount > previousLocalEmployeeCount ? employeeCount - previousLocalEmployeeCount : employeeCount;\n  const [localEmployeeCount, setLocalEmployeeCount] = useState(initialLocalCount);\n  const [qualityCounts, setQualityCounts] = useState({\n    \"Aucun\": 0,\n    \"Un peu\": 0,\n    \"Beaucoup\": 0,\n    \"Je ne sais pas\": 0\n  });\n  const [displayCounters, setDisplayCounters] = useState({});\n  const [selectedQuality, setSelectedQuality] = useState(0);\n  useEffect(() => {\n    if (employeeCount === previousLocalEmployeeCount) {\n      setLocalEmployeeCount(initialLocalCount);\n    }\n  }, [employeeCount, previousLocalEmployeeCount, initialLocalCount]);\n  const goToInterface4 = () => {\n    const totalSelectedDevices = Object.values(qualityCounts).reduce((sum, count) => sum + count, 0);\n    if (totalSelectedDevices === localEmployeeCount) {\n      const speed = calculateSpeed(localEmployeeCount, selectedQuality);\n      setSpeed(speed); // Met à jour la vitesse dans le contexte\n      navigate('/Entreprise/Ife4');\n    } else {\n      alert('Le nombre total d’appareils doit correspondre au nombre d’employés.');\n    }\n  };\n\n  // Reste du code...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        speed: calculateSpeed(localEmployeeCount, selectedQuality)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Ifee3, \"Fc8bvHNCAT7JDvs4yNUK8JG05Zo=\", false, function () {\n  return [useNavigate];\n});\n_c = Ifee3;\nexport default Ifee3;\nvar _c;\n$RefreshReg$(_c, \"Ifee3\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","NavBar","EmployeeContext","calculateSpeed","jsxDEV","_jsxDEV","Ifee3","previousLocalEmployeeCount","_s","navigate","employeeCount","setSpeed","initialLocalCount","maxCount","localEmployeeCount","setLocalEmployeeCount","qualityCounts","setQualityCounts","displayCounters","setDisplayCounters","selectedQuality","setSelectedQuality","goToInterface4","totalSelectedDevices","Object","values","reduce","sum","count","speed","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hp/topnet-client/src/components/Entreprise/Ifee3.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../../styles.css';\r\nimport NavBar from '../NavBar';\r\nimport { EmployeeContext } from '../EmployeeContext';  \r\nimport { calculateSpeed } from '../calculateSpeed';\r\n\r\nconst Ifee3 = ({ previousLocalEmployeeCount }) => {\r\n    const navigate = useNavigate();\r\n    const { employeeCount, setSpeed } = useContext(EmployeeContext); \r\n\r\n    const initialLocalCount = employeeCount > previousLocalEmployeeCount \r\n        ? employeeCount - previousLocalEmployeeCount \r\n        : 0;\r\n\r\n    const maxCount = employeeCount > previousLocalEmployeeCount \r\n        ? employeeCount - previousLocalEmployeeCount \r\n        : employeeCount;\r\n\r\n    const [localEmployeeCount, setLocalEmployeeCount] = useState(initialLocalCount);  \r\n    const [qualityCounts, setQualityCounts] = useState({\r\n        \"Aucun\": 0,\r\n        \"Un peu\": 0,\r\n        \"Beaucoup\": 0,\r\n        \"Je ne sais pas\": 0,\r\n    });\r\n\r\n    const [displayCounters, setDisplayCounters] = useState({});\r\n    const [selectedQuality, setSelectedQuality] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (employeeCount === previousLocalEmployeeCount) {\r\n            setLocalEmployeeCount(initialLocalCount);\r\n        }\r\n    }, [employeeCount, previousLocalEmployeeCount, initialLocalCount]);\r\n\r\n    const goToInterface4 = () => {\r\n        const totalSelectedDevices = Object.values(qualityCounts).reduce((sum, count) => sum + count, 0);\r\n        if (totalSelectedDevices === localEmployeeCount) {\r\n            const speed = calculateSpeed(localEmployeeCount, selectedQuality);\r\n            setSpeed(speed);  // Met à jour la vitesse dans le contexte\r\n            navigate('/Entreprise/Ife4');\r\n        } else {\r\n            alert('Le nombre total d’appareils doit correspondre au nombre d’employés.');\r\n        }\r\n    };\r\n\r\n    // Reste du code...\r\n\r\n    return (\r\n        <div className=\"main-content\">\r\n            <div className=\"header\">\r\n                <NavBar speed={calculateSpeed(localEmployeeCount, selectedQuality)} />  {/* Afficher la vitesse actuelle */}\r\n            </div>\r\n            {/* ...le reste du composant... */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Ifee3;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,kBAAkB;AACzB,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAASC,eAAe,QAAQ,oBAAoB;AACpD,SAASC,cAAc,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAA2B,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEU,aAAa;IAAEC;EAAS,CAAC,GAAGZ,UAAU,CAACG,eAAe,CAAC;EAE/D,MAAMU,iBAAiB,GAAGF,aAAa,GAAGH,0BAA0B,GAC9DG,aAAa,GAAGH,0BAA0B,GAC1C,CAAC;EAEP,MAAMM,QAAQ,GAAGH,aAAa,GAAGH,0BAA0B,GACrDG,aAAa,GAAGH,0BAA0B,GAC1CG,aAAa;EAEnB,MAAM,CAACI,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGlB,QAAQ,CAACe,iBAAiB,CAAC;EAC/E,MAAM,CAACI,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC;IAC/C,OAAO,EAAE,CAAC;IACV,QAAQ,EAAE,CAAC;IACX,UAAU,EAAE,CAAC;IACb,gBAAgB,EAAE;EACtB,CAAC,CAAC;EAEF,MAAM,CAACqB,eAAe,EAAEC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACuB,eAAe,EAAEC,kBAAkB,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EAEzDC,SAAS,CAAC,MAAM;IACZ,IAAIY,aAAa,KAAKH,0BAA0B,EAAE;MAC9CQ,qBAAqB,CAACH,iBAAiB,CAAC;IAC5C;EACJ,CAAC,EAAE,CAACF,aAAa,EAAEH,0BAA0B,EAAEK,iBAAiB,CAAC,CAAC;EAElE,MAAMU,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,oBAAoB,GAAGC,MAAM,CAACC,MAAM,CAACT,aAAa,CAAC,CAACU,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAGC,KAAK,EAAE,CAAC,CAAC;IAChG,IAAIL,oBAAoB,KAAKT,kBAAkB,EAAE;MAC7C,MAAMe,KAAK,GAAG1B,cAAc,CAACW,kBAAkB,EAAEM,eAAe,CAAC;MACjET,QAAQ,CAACkB,KAAK,CAAC,CAAC,CAAE;MAClBpB,QAAQ,CAAC,kBAAkB,CAAC;IAChC,CAAC,MAAM;MACHqB,KAAK,CAAC,qEAAqE,CAAC;IAChF;EACJ,CAAC;;EAED;;EAEA,oBACIzB,OAAA;IAAK0B,SAAS,EAAC,cAAc;IAAAC,QAAA,eACzB3B,OAAA;MAAK0B,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACnB3B,OAAA,CAACJ,MAAM;QAAC4B,KAAK,EAAE1B,cAAc,CAACW,kBAAkB,EAAEM,eAAe;MAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,MAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd,CAAC;AAAC5B,EAAA,CAlDIF,KAAK;EAAA,QACUN,WAAW;AAAA;AAAAqC,EAAA,GAD1B/B,KAAK;AAoDX,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}